html,
body {
    width: 100%;
    height: 100%;
    background-color: #FEFEFE;
    font-family: "Inconsolata";
}

table {
    outline: 0;
    font-weight: inherit;
    font-style: inherit;
    font-family: inherit;
    font-size: 100%;

    display: table;
    box-sizing: border-box;
    text-indent: initial;
    border-color: gray;
    width: 100%;
    border-top: 1px solid #444444;
    border-collapse: collapse;
}

th,
td {
    border-bottom: 1px solid #444444;
    padding: 10px;
}

.disabledrag {
    -webkit-user-select:none; 
    -moz-user-select:none; 
    -ms-user-select:none;
    user-select:none
}

.inventory {
    background: #fff;
    color: #000;
    overflow-y: visible;
    overflow-x: auto;
    border-collapse: separate;
    border-spacing: 0;
    width: 100%;
    padding: 0 0 1px 0;
    margin: 0;
    clear: both;
}

.mobile-table-label {
    display: none;
}

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
@media only screen and (max-width: 760px),
(min-device-width: 768px) and (max-device-width: 1024px) {

    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
        display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    tr {
        margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
        background: #ccc;
    }

    td {
        /* Behave  like a "row" */
        border: none;
        border-bottom: 1px solid #eee;
        position: relative;
        padding-left: 50%;
    }

    td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 0;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
    }

    /*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
    td:nth-of-type(1):before {
        content: "사용자명";
    }

    td:nth-of-type(2):before {
        content: "위치";
    }

    td:nth-of-type(3):before {
        content: "컨텐츠명";
    }

    td:nth-of-type(4):before {
        content: "학습한 시간";
    }

    td:nth-of-type(5):before {
        content: "학습 인정 시간";
    }

    td:nth-of-type(6):before {
        content: "컨텐츠 시간";
    }

    td:nth-of-type(7):before {
        content: "영상 출석 진도율(%)";
    }

    td:nth-of-type(8):before {
        content: "영상 출석 상태(P/F)";
    }
}

#moreinfo {
    margin-left: 20px;
}

#main-card {
    height: 100%;
    width: 100%;
    border-radius: 25px;
    margin: 50px auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    box-sizing: border-box;
}

#mainRow {
    width: 100%;
    height: 100%;
    margin-left: 0;
}

#logOutBtn {
    width: 40px;
    height: 40px;
    border-radius: 30px;
    background-color: #8AAAE5;
    border: none;
    padding: 10px 5px;
    position: relative;
    bottom: 1.3em;
}